<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation -->
<includes>
  
    <include name="View_59_BannerWall">
		    
        <control type="group">
		<left>70</left>
			<include>Animation.Common</include>
			
			<visible>Control.IsVisible(59)</visible>
			
			<control type="image">
				<include>Animation.MenuSlideIn</include>
				<width>248</width>
				<height>432</height>
				<top>213</top>
				<left>1</left>
				<texture border="10">backg/Bild2.png</texture>
			</control>
			<control type="image">
				<include>Animation.MenuSlideIn</include>
				<width>210</width>
				<height>393</height>
				<top>233</top>
				<left>20</left>
				<texture border="10">backg/Bild3.png</texture>
			</control>

			<control type="image">
				<width>255</width>
				<height>440</height>
				<top>210</top>
				<left>-3</left>
				<texture border="10">backg/Bild22.png</texture>
				<visible>StringCompare(Skin.CurrentColourTheme ,Dark with Light Dialogs)</visible>
			</control>
		<control type="group">
		<include>Animation.MenuSlideIn</include>
			<control type="wraplist" id="59">
					
			<visible>Container.Content(musicvideos) | Container.Content(artists) | Container.Content(movies) | Container.Content(tvshows) |  Container.Content(actors) | Container.Content(sets) | Container.Content(seasons)</visible>
				<top>235</top>
				<height>390</height>
			   <!-- <right>SidePad</right>-->
				<width>1100</width>
				<onleft condition="!Skin.HasSetting(global.kioskmode)">9000</onleft>
				<onright>60</onright>
				<onup>59</onup>
				<ondown>59</ondown>
				<focusposition>3</focusposition>
				<movement>3</movement>
				<pagecontrol>60</pagecontrol>
				<viewtype label="Modern Fanart">list</viewtype>
				<scrolltime tween="quadratic">300</scrolltime>
				
				<itemlayout width="400" height="54">
				
					<include>50itemlayout_new</include>
				</itemlayout>

				<focusedlayout width="400" height="54">
					<control type="group">
						<visible>!Control.HasFocus(60)</visible>
						<include>50focuslayout_new</include>
					</control>
					<control type="group">
						<visible>Control.HasFocus(60)</visible>
						<include>50itemlayout_new</include>
					</control>
				</focusedlayout>
				
			</control>
		</control>
		</control>	
			
		<control type="group">
		<include>Animation.Common</include>
			<visible>Control.IsVisible(59)</visible>

			<control type="group">
				<top>205</top>
				<left>270</left>
				<control type="image">
					<top>5</top>
					<left>5</left>
                    <width>1620</width>
                    <height>700</height>
                    <texture border="10">backg/background.png</texture>
                </control>
				
				<control type="image">
					<top>28</top>
					<left>38</left>
                    <width>1551</width>
                    <height>654</height>
                    <texture border="10">backg/bg66.png</texture>
                </control>
				
				<control type="image">
                    <width>1627</width>
                    <height>710</height>
                    <texture border="10">backg/background22.png</texture>
					<visible>StringCompare(Skin.CurrentColourTheme ,Dark with Light Dialogs)</visible>
             	</control>

                <control type="image">
                    <left>428</left>
                    <top>29</top>
                    <right>10</right>
                    <bottom>10</bottom>
                    <fadetime>200</fadetime>
                    <width>1160</width>
                    <height>655</height>
					<fadetime>600</fadetime>
					
					
			
			 		
					<!-- Ende -->
                    <aspectratio aligny="top" align="right">scale </aspectratio>
                    <texture fallback="backg/flags/mpaa/NR.png">$VAR[FanartImage]</texture>
					<!-- diffuse="diffuse/pvrinfo.png" -->
                </control>
				
				
				<control type="group">
                <left>60</left>
                <right>20</right>
                <posy>25</posy>
                <height>650</height>
				<width>355</width>
				<!--<include>Animation.SwitchText</include>-->
                
                <control type="label">
                    <top>8</top>
                    <aligny>center</aligny>
                    <height>64</height>
                    <font>SmallBold2</font>
                    <textcolor>Dark1</textcolor>
                    <selectedcolor>Dark1</selectedcolor>
                    <label>$INFO[ListItem.Label]</label>
                </control>
				
				
				
                <control type="label">
                    <top>60</top>
                    <height>64</height>
                    <aligny>center</aligny>
                    <font>Small333</font>
                    <textcolor>Dark1</textcolor>
                    <selectedcolor>Dark1</selectedcolor>
                    <label>$INFO[ListItem.Year]</label>
                </control>
				<control type="label">
                    <top>60</top>
                    <height>64</height>
					<left>90</left>
                    <aligny>center</aligny>
					<size>38</size>
                    <font>Small333</font>
					<size>38</size>
                    <textcolor>Dark1</textcolor>
                    <selectedcolor>Dark1</selectedcolor>
                    <label>$INFO[ListItem.Duration] min</label>
					<visible>!ListItem.IsFolder</visible> 
                </control>
				
				
				
                <control type="textbox">
				
                    <top>136</top>
                    <bottom>17</bottom>
                    <align>left</align>
                    <font>Small333</font>
					<height>350</height>
                    <textcolor>Dark1</textcolor>
                    <selectedcolor>Dark1</selectedcolor>
                    <label>$INFO[ListItem.Plot]</label>
					<autoscroll>false</autoscroll>
                </control>
				
				<control type="label">
                        <posy>570</posy>
                        <width>450</width>
                        <font>Small333</font>
						<textcolor>Dark1</textcolor>
                        <label>$INFO[ListItem.RatingAndVotes]</label>
                        <selectedcolor>Dark1</selectedcolor>
						
                </control>
				
				<control type="group">
					<!--<include>Animation.SwitchStars</include>-->
					<posy>460</posy>
					<posx>0</posx>
                    <width>1050</width>
					<visible>!ListItem.IsFolder</visible>
							<control type="image">
							<posx>0</posx>
								<width>40</width>
								<height>40</height>
								<centertop>50%</centertop>
								<texture colordiffuse="$VAR[ColorHighlight]">backg/$VAR[Flagstar1].png</texture>
							</control>
							<control type="image">
								<posx>50</posx>
								<width>40</width>
								<height>40</height>
								<centertop>50%</centertop>
								<texture colordiffuse="$VAR[ColorHighlight]">backg/$VAR[Flagstar2].png</texture>
								<visible>!Skin.HasSetting(furniture.numericrating)</visible>
							</control>
							<control type="image">
								<posx>100</posx>
								<width>40</width>
								<height>40</height>
								<centertop>50%</centertop>
								<texture colordiffuse="$VAR[ColorHighlight]">backg/$VAR[Flagstar3].png</texture>
								<visible>!Skin.HasSetting(furniture.numericrating)</visible>
							</control>
							<control type="image">
								<posx>150</posx>
								<width>40</width>
								<height>40</height>
								<centertop>50%</centertop>
								<texture colordiffuse="$VAR[ColorHighlight]">backg/$VAR[Flagstar4].png</texture>
								<visible>!Skin.HasSetting(furniture.numericrating)</visible>
							</control>
							<control type="image">
								<posx>200</posx>
								<width>45</width>
								<height>43</height>
								<centertop>50%</centertop>
								<texture colordiffuse="$VAR[ColorHighlight]">backg/$VAR[Flagstar5].png</texture>
								<visible>!Skin.HasSetting(furniture.numericrating)</visible>
							</control>
						
						
				</control> 
				
				
				
				
				
				
				
				
				
				</control>
				
				
				
				</control>
				
				
				<control type="group">
				<visible>!ListItem.IsFolder</visible>
				<fadetime>400</fadetime> 
				<left>1760</left>
                <top>230</top>
				<control type="image">
                        
                        <width>100</width>
                        <height>100</height>
						<fadetime>400</fadetime>
                        <texture colordiffuse="FF333333">backg/OverlayWatched.png</texture>
                        <visible>!StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
              	</control>
				<control type="image">
                        
                        <width>100</width>
                        <height>100</height>
						<fadetime>400</fadetime>
                        <texture colordiffuse="FFFFFFFF">backg/unwatched_2.png</texture>
                        <visible>!StringCompare(ListItem.Overlay,OverlayWatched.png)</visible>
              	</control>
				
				
				<control type="image">
                        
                        <width>100</width>
                        <height>100</height>
						<fadetime>400</fadetime>
                        <texture colordiffuse="FF333333">backg/OverlayWatched.png</texture>
                        <visible>!StringCompare(ListItem.Overlay,OverlayUnWatched.png)</visible>
              	</control>
				<control type="image">
                        
                        <width>100</width>
                        <height>100</height>
						<fadetime>400</fadetime>
                        <texture colordiffuse="$VAR[ColorHighlight]">backg/watched_2.png</texture>
                        <visible>!StringCompare(ListItem.Overlay,OverlayUnWatched.png)</visible>
              	</control>
				
				</control>
				
				
				
				
				
				
				<control type="group">
				<left>329</left>
				<top>227</top>
				
				
				
				
				<control type="group">
				<visible>Skin.HasSetting(furniture.overlayinfobalken)</visible>
				<animation effect="fade" delay="200" start="0" end="100" time="1000">WindowOpen</animation>
				
				
				
				
				
				<control type="image">
					<width>5</width>
					<height>6</height>
					<top>653</top>
					<left>-20</left>
					
					<texture border="1">backg/progress.png</texture>
					
				</control>
				
				
				
				<control type="image">
					<width>20</width>
					<height>6</height>
					<top>653</top>
					<left>-20</left>
					<visible>IntegerGreaterThan(ListItem.PercentPlayed,1) | [Integer.IsEqual(ListItem.PercentPlayed,0) + StringCompare(ListItem.Overlay,OverlayWatched.png)]</visible>
					<texture border="1">backg/progress.png</texture>
					<animation type="Conditional" condition="!Container(59).OnNext + !Container(59).OnPrevious">                  
				   		<effect type="fade" start="0" end="100" time="20" delay="500" />
					              
					</animation>
					
					 
				</control>
				
				<control type="image">
					<width>20</width>
					<height>6</height>
					<top>653</top>
					<left>0</left>
					<visible>IntegerGreaterThan(ListItem.PercentPlayed,5) | [Integer.IsEqual(ListItem.PercentPlayed,0) + StringCompare(ListItem.Overlay,OverlayWatched.png)]</visible>
					<texture border="1">backg/progress.png</texture>
					<animation type="Conditional" condition="!Container(59).OnNext + !Container(59).OnPrevious">                  
				   		<effect type="fade" start="0" end="100" time="20" delay="520" />               
					</animation> 
				</control>
				<control type="image">
					<width>20</width>
					<height>6</height>
					<top>653</top>
					<left>20</left>
					<visible>IntegerGreaterThan(ListItem.PercentPlayed,10) | [Integer.IsEqual(ListItem.PercentPlayed,0) + StringCompare(ListItem.Overlay,OverlayWatched.png)]</visible>
					<texture border="1">backg/progress.png</texture>
					<animation type="Conditional" condition="!Container(59).OnNext + !Container(59).OnPrevious">                  
				   		<effect type="fade" start="0" end="100" time="20" delay="550" />               
					</animation> 
				</control>
				<control type="image">
					<width>20</width>
					<height>6</height>
					<top>653</top>
					<left>40</left>
					<visible>IntegerGreaterThan(ListItem.PercentPlayed,15) | [Integer.IsEqual(ListItem.PercentPlayed,0) + StringCompare(ListItem.Overlay,OverlayWatched.png)]</visible>
					<texture border="1">backg/progress.png</texture>
					<animation type="Conditional" condition="!Container(59).OnNext + !Container(59).OnPrevious">                  
				   		<effect type="fade" start="0" end="100" time="20" delay="580" />                
					</animation> 
				</control>
				
				<control type="image">
					<width>20</width>
					<height>6</height>
					<top>653</top>
					<left>60</left>
					<visible>IntegerGreaterThan(ListItem.PercentPlayed,20) | [Integer.IsEqual(ListItem.PercentPlayed,0) + StringCompare(ListItem.Overlay,OverlayWatched.png)]</visible>
					<texture border="1">backg/progress.png</texture>
					<animation type="Conditional" condition="!Container(59).OnNext + !Container(59).OnPrevious">                  
				   		<effect type="fade" start="0" end="100" time="20" delay="610" />                
					</animation> 
				</control>
				<control type="image">
					<width>20</width>
					<height>6</height>
					<top>653</top>
					<left>80</left>
					<visible>IntegerGreaterThan(ListItem.PercentPlayed,25) | [Integer.IsEqual(ListItem.PercentPlayed,0) + StringCompare(ListItem.Overlay,OverlayWatched.png)]</visible>
					<texture border="1">backg/progress.png</texture>
					<animation type="Conditional" condition="!Container(59).OnNext + !Container(59).OnPrevious">                  
				   		<effect type="fade" start="0" end="100" time="20" delay="630" />                
					</animation> 
				</control>
				<control type="image">
					<width>20</width>
					<height>6</height>
					<top>653</top>
					<left>100</left>
					<visible>IntegerGreaterThan(ListItem.PercentPlayed,30) | [Integer.IsEqual(ListItem.PercentPlayed,0) + StringCompare(ListItem.Overlay,OverlayWatched.png)]</visible>
					<texture border="1">backg/progress.png</texture>
					<animation type="Conditional" condition="!Container(59).OnNext + !Container(59).OnPrevious">                  
				   		<effect type="fade" start="0" end="100" time="20" delay="650" />                
					</animation> 
				</control>
				<control type="image">
					<width>20</width>
					<height>6</height>
					<top>653</top>
					<left>120</left>
					<visible>IntegerGreaterThan(ListItem.PercentPlayed,35) | [Integer.IsEqual(ListItem.PercentPlayed,0) + StringCompare(ListItem.Overlay,OverlayWatched.png)]</visible>
					<texture border="1">backg/progress.png</texture>
					<animation type="Conditional" condition="!Container(59).OnNext + !Container(59).OnPrevious">                  
				   		<effect type="fade" start="0" end="100" time="20" delay="660" />                
					</animation> 
				</control>
				
				<control type="image">
					<width>20</width>
					<height>6</height>
					<top>653</top>
					<left>140</left>
					<visible>IntegerGreaterThan(ListItem.PercentPlayed,40) | [Integer.IsEqual(ListItem.PercentPlayed,0) + StringCompare(ListItem.Overlay,OverlayWatched.png)]</visible>
					<texture border="1">backg/progress.png</texture>
					<animation type="Conditional" condition="!Container(59).OnNext + !Container(59).OnPrevious">                  
				   		<effect type="fade" start="0" end="100" time="20" delay="675" />                
					</animation> 
				</control>
				<control type="image">
					<width>20</width>
					<height>6</height>
					<top>653</top>
					<left>160</left>
					<visible>IntegerGreaterThan(ListItem.PercentPlayed,45) | [Integer.IsEqual(ListItem.PercentPlayed,0) + StringCompare(ListItem.Overlay,OverlayWatched.png)]</visible>
					<texture border="1">backg/progress.png</texture>
					<animation type="Conditional" condition="!Container(59).OnNext + !Container(59).OnPrevious">                  
				   		<effect type="fade" start="0" end="100" time="20" delay="690" />                
					</animation> 
				</control>
				<control type="image">
					<width>20</width>
					<height>6</height>
					<top>653</top>
					<left>180</left>
					<visible>IntegerGreaterThan(ListItem.PercentPlayed,50) | [Integer.IsEqual(ListItem.PercentPlayed,0) + StringCompare(ListItem.Overlay,OverlayWatched.png)]</visible>
					<texture border="1">backg/progress.png</texture>
					<animation type="Conditional" condition="!Container(59).OnNext + !Container(59).OnPrevious">                  
				   		<effect type="fade" start="0" end="100" time="20" delay="705" />                
					</animation> 
				</control>
				<control type="image">
					<width>20</width>
					<height>6</height>
					<top>653</top>
					<left>200</left>
					<visible>IntegerGreaterThan(ListItem.PercentPlayed,55) | [Integer.IsEqual(ListItem.PercentPlayed,0) + StringCompare(ListItem.Overlay,OverlayWatched.png)]</visible>
					<texture border="1">backg/progress.png</texture>
					<animation type="Conditional" condition="!Container(59).OnNext + !Container(59).OnPrevious">                  
				   		<effect type="fade" start="0" end="100" time="20" delay="715" />                
					</animation> 
				</control>
				
				
				
				<control type="image">
					<width>20</width>
					<height>6</height>
					<top>653</top>
					<left>220</left>
					<visible>IntegerGreaterThan(ListItem.PercentPlayed,60) | [Integer.IsEqual(ListItem.PercentPlayed,0) + StringCompare(ListItem.Overlay,OverlayWatched.png)]</visible>
					<texture border="1">backg/progress.png</texture>
					<animation type="Conditional" condition="!Container(59).OnNext + !Container(59).OnPrevious">                  
				   		<effect type="fade" start="0" end="100" time="20" delay="725" />                
					</animation> 
				</control>
				<control type="image">
					<width>20</width>
					<height>6</height>
					<top>653</top>
					<left>240</left>
					<visible>IntegerGreaterThan(ListItem.PercentPlayed,65) | [Integer.IsEqual(ListItem.PercentPlayed,0) + StringCompare(ListItem.Overlay,OverlayWatched.png)]</visible>
					<texture border="1">backg/progress.png</texture>
					<animation type="Conditional" condition="!Container(59).OnNext + !Container(59).OnPrevious">                  
				   		<effect type="fade" start="0" end="100" time="20" delay="735" />                
					</animation> 
				</control>
				<control type="image">
					<width>20</width>
					<height>6</height>
					<top>653</top>
					<left>260</left>
					<visible>IntegerGreaterThan(ListItem.PercentPlayed,70) | [Integer.IsEqual(ListItem.PercentPlayed,0) + StringCompare(ListItem.Overlay,OverlayWatched.png)]</visible>
					<texture border="1">backg/progress.png</texture>
					<animation type="Conditional" condition="!Container(59).OnNext + !Container(59).OnPrevious">                  
				   		<effect type="fade" start="0" end="100" time="20" delay="745" />                
					</animation> 
				</control>
				<control type="image">
					<width>20</width>
					<height>6</height>
					<top>653</top>
					<left>280</left>
					<visible>IntegerGreaterThan(ListItem.PercentPlayed,75) | [Integer.IsEqual(ListItem.PercentPlayed,0) + StringCompare(ListItem.Overlay,OverlayWatched.png)]</visible>
					<texture border="1">backg/progress.png</texture>
					<animation type="Conditional" condition="!Container(59).OnNext + !Container(59).OnPrevious">                  
				   		<effect type="fade" start="0" end="100" time="20" delay="750" />                
					</animation> 
				</control>
				<control type="image">
					<width>20</width>
					<height>6</height>
					<top>653</top>
					<left>300</left>
					<visible>IntegerGreaterThan(ListItem.PercentPlayed,80) | [Integer.IsEqual(ListItem.PercentPlayed,0) + StringCompare(ListItem.Overlay,OverlayWatched.png)]</visible>
					<texture border="1">backg/progress.png</texture>
					<animation type="Conditional" condition="!Container(59).OnNext + !Container(59).OnPrevious">                  
				   		<effect type="fade" start="0" end="100" time="20" delay="755" />                
					</animation> 
				</control>
				<control type="image">
					<width>20</width>
					<height>6</height>
					<top>653</top>
					<left>320</left>
					<visible>IntegerGreaterThan(ListItem.PercentPlayed,85) | [Integer.IsEqual(ListItem.PercentPlayed,0) + StringCompare(ListItem.Overlay,OverlayWatched.png)]</visible>
					<texture border="1">backg/progress.png</texture>
					<animation type="Conditional" condition="!Container(59).OnNext + !Container(59).OnPrevious">                  
				   		<effect type="fade" start="0" end="100" time="20" delay="760" />                
					</animation> 
				</control>
				
				
				<control type="image">
					<width>20</width>
					<height>6</height>
					<top>653</top>
					<left>340</left>
					<visible>IntegerGreaterThan(ListItem.PercentPlayed,90) | [Integer.IsEqual(ListItem.PercentPlayed,0) + StringCompare(ListItem.Overlay,OverlayWatched.png)]</visible>
					<texture border="1">backg/progress.png</texture>
					<animation type="Conditional" condition="!Container(59).OnNext + !Container(59).OnPrevious">                  
				   		<effect type="fade" start="0" end="100" time="20" delay="765" />                
					</animation> 
				</control>
				<control type="image">
					<width>10</width>
					<height>6</height>
					<top>653</top>
					<left>360</left>
					<visible>IntegerGreaterThan(ListItem.PercentPlayed,95) | [Integer.IsEqual(ListItem.PercentPlayed,0) + StringCompare(ListItem.Overlay,OverlayWatched.png)]</visible>
					<texture border="1">backg/progress.png</texture>
					<animation type="Conditional" condition="!Container(59).OnNext + !Container(59).OnPrevious">                  
				   		<effect type="fade" start="0" end="100" time="20" delay="770" />                
					</animation> 
				</control>
				
				
				
				
				
				
				</control>
				
				
				
				
				
				
				
				
				
				<control type="image">	
					<visible>!ListItem.IsFolder</visible>                 
                    <posx>1157</posx>
                    <posy>438</posy>
                    <width>235</width>
                    <height>235</height>
                    <fadetime>1400</fadetime>				
                    <texture>$INFO[ListItem.Art(discart)]</texture>
                    <animation type="Conditional" condition="!Container(59).OnNext + !Container(59).OnPrevious">                  
				   		<effect type="slide" start="110" end="-15" time="1000" delay="2000" tween="cubic" />                
					</animation> 
					<!--<animation effect="rotate" end="-360" center="auto" time="4800" loop="true" reversible="false" condition="!Player.Paused">Conditional</animation>-->
                    
                </control>
				
				
				<control type="image">	
					<visible>!ListItem.IsFolder</visible>                 
                    <posx>1263</posx>
                    <posy>340</posy>
                    <width>242</width>
                    <height>342</height>
                    <fadetime>400</fadetime>
					<!--
					<visible>!Container(550).OnNext + !Container(550).OnPrevious</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" start="400,0" delay="100" end="0,0" time="1000" tween="sine" easing="out" reversible="false"/>
						<effect type="fade" end="100" time="300" />
					</animation>-->
					
                    <texture>$INFO[ListItem.Art(poster)]</texture>
                    
                    
                </control>
				<control type="image">
					<posx>1244</posx>
                    <posy>330</posy>
					<width>278</width>
					<height>370</height>
					<fadetime>400</fadetime>
					<texture diffuse="thumbs/thumb_mask.png">backg/poster_glass2.png</texture>
					<visible>!ListItem.IsFolder</visible>
					<!--<visible>!Container(550).OnNext + !Container(550).OnPrevious</visible>
					<animation type="Visible" reversible="false">
						<effect type="slide" start="360,0" delay="100" end="0,0" time="900" tween="sine" easing="out" reversible="false"/>
						<effect type="fade" end="100" time="300" />
					</animation>-->
				</control>
				
				</control>
				
				
				
				
				
				
            
				
				
			
			
			
			
			
        </control>   
    </include>
</includes>
